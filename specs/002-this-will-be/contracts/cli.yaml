openapi: 3.0.3
info:
  title: SBIR Transition Classifier CLI
  description: Local command-line interface for SBIR transition detection
  version: 1.0.0

paths:
  # CLI commands are represented as operations for documentation
  /cli/run:
    post:
      summary: Execute detection run
      description: Run SBIR transition detection using specified configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_path:
                  type: string
                  description: Path to YAML configuration file
                  example: "config/custom.yaml"
                output_dir:
                  type: string
                  description: Directory for output files
                  example: "results/"
                data_dir:
                  type: string
                  description: Directory containing input data files
                  example: "data/"
              required:
                - config_path
      responses:
        '200':
          description: Detection run completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectionRunResult'
        '400':
          description: Invalid configuration or missing data files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /cli/validate-config:
    post:
      summary: Validate configuration file
      description: Check YAML configuration for syntax and value errors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config_path:
                  type: string
                  description: Path to YAML configuration file
              required:
                - config_path
      responses:
        '200':
          description: Configuration is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
        '400':
          description: Configuration validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /cli/reset-config:
    post:
      summary: Generate default configuration
      description: Create default YAML configuration file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                output_path:
                  type: string
                  description: Where to write default configuration
                  example: "config/default.yaml"
              required:
                - output_path
      responses:
        '200':
          description: Default configuration created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Default configuration written to config/default.yaml"
                  config_path:
                    type: string

components:
  schemas:
    DetectionRunResult:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
          description: Unique identifier for this detection run
        status:
          type: string
          enum: [COMPLETED, FAILED]
        detection_count:
          type: integer
          description: Number of transitions detected
        output_files:
          type: array
          items:
            type: string
          description: List of generated output files
        execution_time_seconds:
          type: number
          description: Total execution time
        config_used:
          type: string
          description: Path to configuration file used

    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        schema_version:
          type: string
        message:
          type: string
          example: "Configuration is valid"

    ValidationError:
      type: object
      properties:
        valid:
          type: boolean
          example: false
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Configuration field with error
              message:
                type: string
                description: Error description
              value:
                description: Invalid value provided
              valid_range:
                type: string
                description: Acceptable values or range

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Additional error details
        suggestions:
          type: array
          items:
            type: string
          description: Suggested fixes
