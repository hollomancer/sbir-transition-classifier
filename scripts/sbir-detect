#!/usr/bin/env python3
"""
SBIR Transition Classifier - Command Line Interface

Bulk Processing Commands:
    sbir-detect bulk-process --verbose                    # Complete pipeline with progress tracking
    sbir-detect bulk-process --export-format jsonl       # Export only JSONL format
    sbir-detect info                                      # Show system information
    sbir-detect quick-stats                               # Database statistics

Legacy Commands:
    sbir-detect run --config config/default.yaml --output results/
    sbir-detect validate-config --config config/custom.yaml
    sbir-detect reset-config --output config/default.yaml
"""

import sys
import os
from pathlib import Path

# Add the src directory to Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root / "src"))

def main():
    try:
        from sbir_transition_classifier.cli.main import main as cli_main
        
        # Show helpful banner for direct execution without arguments
        if len(sys.argv) == 1:
            print("üîç SBIR Transition Classifier - Bulk Processing Tool")
            print("=" * 55)
            print()
            print("üöÄ Recommended Quick Start:")
            print("  ./scripts/sbir-detect bulk-process --verbose")
            print()
            print("üìä System Information:")
            print("  ./scripts/sbir-detect info")
            print("  ./scripts/sbir-detect quick-stats")
            print()
            print("‚ùì For detailed help:")
            print("  ./scripts/sbir-detect --help")
            print()
            return
        
        # Execute the CLI
        cli_main()
        
    except ImportError as e:
        print(f"‚ùå Error: Could not import CLI modules: {e}", file=sys.stderr)
        print("Make sure you're in the project directory and dependencies are installed.", file=sys.stderr)
        print("Try: poetry install && poetry shell", file=sys.stderr)
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}", file=sys.stderr)
        sys.exit(1)

if __name__ == "__main__":
    main()
